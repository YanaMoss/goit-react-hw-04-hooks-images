{"version":3,"sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","services/image-api.js","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/App/App.jsx","index.js"],"names":["LoadMore","styled","button","Button","title","type","onClick","axios","defaults","baseURL","params","image_type","key","per_page","fetchImages","a","page","query","id","get","q","ImageGalleryContainer","ul","ImageGalleryItemComponent","li","ImageGalleryItem","props","url","name","getImage","e","currentTarget","src","alt","width","height","className","ImageGallery","useState","images","setImages","setPage","total","setTotal","loading","setLoading","isFirstRender","useRef","useEffect","current","then","response","state","data","hits","totalHits","window","scrollTo","top","document","documentElement","scrollHeight","behavior","finally","imageId","color","timeout","map","largeImageURL","tags","length","Overlay","div","ModalContent","Modal","onClose","children","addEventListener","handleKeyDown","removeEventListener","code","event","target","SearchbarForm","header","SearchForm","form","SearchFormButton","SearchFormButtonLabel","span","SearchFormInput","input","Searchbar","onSubmit","setQuery","preventDefault","trim","toast","info","autocomplete","autofocus","placeholder","onChange","value","replace","App","openModal","setOpenModal","setId","imageName","setImageName","imageUrl","setImageUrl","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"kSAEaA,EAAWC,IAAOC,OAAV,2lB,OCCRC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,QAAhB,OACpB,cAACN,EAAD,CAAUK,KAAMA,EAAMC,QAASA,EAA/B,SACGF,K,0CCALG,IAAMC,SAASC,QAHE,yBAIjBF,IAAMC,SAASE,OAAS,CACtBC,WAAY,QACZC,IALc,qCAMdC,SAAU,IAGZ,I,QAAMC,EAAW,uCAAG,iCAAAC,EAAA,6DAASC,EAAT,EAASA,KAAMC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,GAAtB,SACLX,IAAMY,IAAI,GAAI,CACzBT,OAAQ,CACNM,OACAI,EAAGH,EACHC,GAAIA,KALU,mFAAH,sDAUFJ,ICpBFO,EAAwBpB,IAAOqB,GAAV,4RAarBC,EAA4BtB,IAAOuB,GAAV,2PCZzBC,EAAmB,SAAAC,GAC9B,IAAQR,EAA4BQ,EAA5BR,GAAIS,EAAwBD,EAAxBC,IAAKC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,SACvB,OACE,cAACN,EAAD,CAEEL,GAAIA,EACJZ,QAAS,SAAAwB,GAAC,OAAID,EAASC,EAAEC,cAAcb,KAHzC,SAKE,qBACEc,IAAKL,EACLM,IAAKL,EACLM,MAAM,MACNC,OAAO,MACPC,UAAU,4BATPlB,ICAI,SAASmB,EAAT,GAA2C,IAAnBpB,EAAkB,EAAlBA,MAAOX,EAAW,EAAXA,QAC5C,EAA4BgC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,GAAjC,mBAAOtB,EAAP,KAAayB,EAAb,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAAgBC,kBAAO,GAE7BC,qBAAU,WACJF,EAAcG,QAChBH,EAAcG,SAAU,EAIZ,KAAVhC,IACF4B,GAAW,GACX/B,EAAY,CAAEE,KAAMA,EAAMC,MAAOA,IAC9BiC,MAAK,SAAAC,GACJX,GAAU,SAAAY,GAAK,4BAAQA,GAAR,YAAkBD,EAASE,KAAKC,UAC/CX,EAASQ,EAASE,KAAKE,WACvBC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,cAGbC,SAAQ,kBAAMlB,EAAW,CAAED,SAAS,UAExC,CAAC5B,EAAMC,IAEV,IAIMY,EAAW,SAAAmC,GACf1D,EAAQ0D,IAGV,OACE,gCACGpB,GACC,cAAC,IAAD,CACEvC,KAAK,OACL4D,MAAM,UACN9B,OAAQ,IACRD,MAAO,IACPgC,QAAS,MAGb,cAAC7C,EAAD,UACGkB,EAAO4B,KAAI,gBAAGjD,EAAH,EAAGA,GAAIkD,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,KAAtB,OACV,cAAC,EAAD,CACEnD,GAAIA,EACJS,IAAKyC,EACLxC,KAAMyC,EACNxC,SAAUA,SAIfU,EAAO+B,OAAS5B,GACf,cAAC,EAAD,CACErC,KAAM,SACND,MAAO,YACPE,QAAS,WAhCfmC,EAAQzB,EAAO,SClCZ,I,UAAMuD,EAAUtE,IAAOuE,IAAV,2OAaPC,EAAexE,IAAOuE,IAAV,iGCZV,SAASE,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACvC5B,qBAAU,WACRQ,OAAOqB,iBAAiB,UAAWC,GACnCtB,OAAOuB,oBAAoB,UAAWD,MAGxC,IAAMA,EAAgB,SAAAhD,GACL,WAAXA,EAAEkD,MACJL,KAUJ,OACE,cAACJ,EAAD,CAASjE,QAPgB,SAAA2E,GACrBA,EAAMlD,gBAAkBkD,EAAMC,QAChCP,KAKF,SACE,cAACF,EAAD,UAAeG,MCrBd,IAAMO,EAAgBlF,IAAOmF,OAAV,qcAmBbC,EAAapF,IAAOqF,KAAV,kLAUVC,EAAmBtF,IAAOC,OAAV,qaAiBhBsF,EAAwBvF,IAAOwF,KAAV,iNAYrBC,EAAkBzF,IAAO0F,MAAV,+PClDb,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,EAA0BvD,mBAAS,IAAnC,mBAAOrB,EAAP,KAAc6E,EAAd,KAcA,OACE,cAACX,EAAD,UACE,eAACE,EAAD,CAAYQ,SAVK,SAAA/D,GACnBA,EAAEiE,iBACmB,KAAjB9E,EAAM+E,OAIVH,EAAS5E,GAHPgF,IAAMC,KAAK,iIAOX,UACE,cAACX,EAAD,CAAkBlF,KAAK,SAAvB,SACE,cAACmF,EAAD,uBAGF,cAACE,EAAD,CACErF,KAAK,OACL8F,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAxBa,SAAAxE,GACnBgE,EAAShE,EAAEC,cAAcwE,MAAMC,QAAQ,IAAK,cCNjC,SAASC,IACtB,MAA0BnE,mBAAS,IAAnC,mBAAOrB,EAAP,KAAc6E,EAAd,KACA,EAAkCxD,oBAAS,GAA3C,mBAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAA8BrE,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAoBP,mBAAS,IAA7B,mBAAOpB,EAAP,KAAW0F,EAAX,KACA,EAAkCtE,mBAAS,IAA3C,mBAAOuE,EAAP,KAAkBC,EAAlB,KACA,EAAgCxE,mBAAS,IAAzC,mBAAOyE,EAAP,KAAiBC,EAAjB,KAEAhE,qBAAU,WACG,KAAP9B,IACF2B,GAAW,kBAAM,KACjB/B,EAAY,CAAEI,OACXgC,MAAK,SAAAC,GACJyD,GAAM,kBAAMzD,EAASE,KAAKC,KAAK,GAAGpC,MAClC4F,GAAa,kBAAM3D,EAASE,KAAKC,KAAK,GAAGe,QACzCsC,GAAa,iBAAM,UAEnBK,GAAY,kBAAM7D,EAASE,KAAKC,KAAK,GAAGc,oBAEzCL,SAAQ,kBAAMlB,GAAW,kBAAM,WAEnC,CAAC3B,IAcJ,OACE,gCACE,cAAC0E,EAAD,CAAWC,SAdK,SAAA5E,GAClB6E,GAAS,SAAA1C,GAAK,OAAInC,QAchB,cAACoB,EAAD,CAAcpB,MAAOA,EAAOX,QAXf,SAAAY,GACf0F,GAAM,kBAAM1F,QAWTwF,GACC,cAAChC,EAAD,CAAOC,QATO,WAClBgC,GAAa,kBAAOD,MAQhB,SACE,qBAAK1E,IAAK+E,EAAU9E,IAAK4E,MAG7B,cAAC,IAAD,CACEI,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEb7E,GACC,cAAC,IAAD,CACEvC,KAAK,OACL4D,MAAM,UACN9B,OAAQ,IACRD,MAAO,IACPgC,QAAS,SC9DnBwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEF9C,SAASkE,eAAe,W","file":"static/js/main.5ca35973.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const LoadMore = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &: :hover, :focus{\r\n   background-color: #303f9f;\r\n }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { LoadMore } from './Button.styled';\r\n\r\nexport const Button = ({ title, type, onClick }) => (\r\n  <LoadMore type={type} onClick={onClick}>\r\n    {title}\r\n  </LoadMore>\r\n);\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://pixabay.com/api';\r\nconst API_KEY = '23643483-d75e612401c1d9a4094e2335a';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  image_type: 'photo',\r\n  key: API_KEY,\r\n  per_page: 12,\r\n};\r\n\r\nconst fetchImages = async ({ page, query, id }) => {\r\n  return await axios.get('', {\r\n    params: {\r\n      page,\r\n      q: query,\r\n      id: id,\r\n    },\r\n  });\r\n};\r\n\r\nexport default fetchImages;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ImageGalleryContainer = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const ImageGalleryItemComponent = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { ImageGalleryItemComponent } from './ImageGallery.styled';\r\n\r\nexport const ImageGalleryItem = props => {\r\n  const { id, url, name, getImage } = props;\r\n  return (\r\n    <ImageGalleryItemComponent\r\n      key={id}\r\n      id={id}\r\n      onClick={e => getImage(e.currentTarget.id)}\r\n    >\r\n      <img\r\n        src={url}\r\n        alt={name}\r\n        width=\"400\"\r\n        height=\"250\"\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </ImageGalleryItemComponent>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Button } from '../Button/Button';\r\nimport fetchImages from '../../services/image-api';\r\nimport { ImageGalleryItem } from './ImageGalleryItem';\r\nimport { ImageGalleryContainer } from './ImageGallery.styled';\r\n\r\nexport default function ImageGallery({ query, onClick }) {\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const isFirstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n\r\n    if (query !== '') {\r\n      setLoading(true);\r\n      fetchImages({ page: page, query: query })\r\n        .then(response => {\r\n          setImages(state => [...state, ...response.data.hits]);\r\n          setTotal(response.data.totalHits);\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        })\r\n        .finally(() => setLoading({ loading: false }));\r\n    }\r\n  }, [page, query]);\r\n\r\n  const nextPage = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  const getImage = imageId => {\r\n    onClick(imageId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && (\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n      <ImageGalleryContainer>\r\n        {images.map(({ id, largeImageURL, tags }) => (\r\n          <ImageGalleryItem\r\n            id={id}\r\n            url={largeImageURL}\r\n            name={tags}\r\n            getImage={getImage}\r\n          />\r\n        ))}\r\n      </ImageGalleryContainer>\r\n      {images.length < total && (\r\n        <Button\r\n          type={'button'}\r\n          title={'Load more'}\r\n          onClick={() => nextPage({ page })}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { ModalContent, Overlay } from './Modal.styled';\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.removeEventListener('keydown', handleKeyDown);\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Overlay onClick={handleOverlayClick}>\r\n      <ModalContent>{children}</ModalContent>\r\n    </Overlay>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const SearchbarForm = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\nexport const SearchFormButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  SearchbarForm,\r\n  SearchForm,\r\n  SearchFormButton,\r\n  SearchFormButtonLabel,\r\n  SearchFormInput,\r\n} from './Searchbar.styled';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setQuery(e.currentTarget.value.replace(' ', '+'));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (query.trim() === '') {\r\n      toast.info('Введите текс для поиска.');\r\n      return;\r\n    }\r\n    onSubmit(query);\r\n  };\r\n  return (\r\n    <SearchbarForm>\r\n      <SearchForm onSubmit={handleSubmit}>\r\n        <SearchFormButton type=\"submit\">\r\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\r\n        </SearchFormButton>\r\n\r\n        <SearchFormInput\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          autofocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleChange}\r\n        />\r\n      </SearchForm>\r\n    </SearchbarForm>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Loader from 'react-loader-spinner';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport fetchImages from '../../services/image-api';\r\nimport Modal from '../Modal/Modal';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\n\r\nexport default function App() {\r\n  const [query, setQuery] = useState('');\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [imageName, setImageName] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (id !== '') {\r\n      setLoading(() => true);\r\n      fetchImages({ id })\r\n        .then(response => {\r\n          setId(() => response.data.hits[0].id);\r\n          setImageName(() => response.data.hits[0].tags);\r\n          setOpenModal(() => 'true');\r\n\r\n          setImageUrl(() => response.data.hits[0].largeImageURL);\r\n        })\r\n        .finally(() => setLoading(() => false));\r\n    }\r\n  }, [id]);\r\n\r\n  const handleImage = query => {\r\n    setQuery(state => query);\r\n  };\r\n\r\n  const getImage = id => {\r\n    setId(() => id);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setOpenModal(() => !openModal);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar onSubmit={handleImage} />\r\n      <ImageGallery query={query} onClick={getImage} />\r\n      {openModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <img src={imageUrl} alt={imageName} />\r\n        </Modal>\r\n      )}\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      {loading && (\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}